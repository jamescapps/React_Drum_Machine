{"version":3,"sources":["Components/Sets.js","Components/Kick.js","Components/Snare.js","Components/HiHat.js","Components/Drums.js","Components/Slider.js","Components/PlayPause.js","App.js","serviceWorker.js","index.js"],"names":["Sets","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","type","onClick","checkElectro","checkRock","checkHipHop","React","Component","Kick","Snare","HiHat","Drums","Components_Kick","Components_Snare","Components_HiHat","Slider","_this","handleChange","bind","assertThisInitialized","beats","addEventListener","event","Tone","Transport","bpm","value","detail","_this2","ref","elem","label","min","max","exp","PlayPause","isOn","state","clicked","handleClick","setState","playAndPause","App","first_click","name","color","repeat","playAudio","pauseAudio","electroInput","document","querySelector","rockInput","hipHopInput","window","onload","checked","index","scheduleRepeat","kickInputs","concat","snareInputs","hihatInputs","kick","start","snare","hihat","Player","toMaster","disabled","pause","style","Components_Sets","Components_Drums","Components_PlayPause","Components_Slider","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bff27216.chunk.js","sourcesContent":["import React from 'react'\n\nclass Sets extends React.Component {\n    constructor(props) {\n        super()\n    }\n    render() {\n        return (\n            <div className = \"sets\">\n                <div className = \"electro\"><h5>Electro</h5><input type=\"checkbox\" onClick={this.props.checkElectro} className = \"check1\"/></div>\n                <div className = \"rock\"><h5>Rock</h5><input type=\"checkbox\" onClick={this.props.checkRock} className = \"check2\"/></div>\n                <div className = \"hiphop\"><h5>HipHop</h5><input type=\"checkbox\" onClick={this.props.checkHipHop} className = \"check3\"/></div> \n            </div>\n        )\n    }\n}\nexport default Sets","import React from 'react'\n\nclass Kick extends React.Component {\n    render() {\n        return (\n            <div className=\"kick\">\n            <h4>Kick</h4>\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n            </div>\n        )\n    }\n}\n    \n    export default Kick\n    ","import React from 'react'\n\nclass Snare extends React.Component {\n    render() {\n        return (\n            <div className=\"snare\">\n            <h4>Snare</h4>\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n            </div> \n        )\n    }\n}\n\nexport default Snare","import React from \"react\"\n\nclass HiHat extends React.Component {\n    render() {\n        return (\n            <div className=\"hihat\">\n            <h4>HiHat</h4>\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n            </div>\n        )\n    }\n}\n\nexport default HiHat","import React from \"react\"\n\nimport Kick from \"./Kick\"\nimport Snare from \"./Snare\"\nimport HiHat from \"./HiHat\"\n\nclass Drums extends React.Component {\n    render() {\n        return (\n            <div className = \"drums\">\n                <Kick />\n                <Snare />\n                <HiHat />\n            </div>\n        )\n    }    \n}\n\nexport default Drums","import React from \"react\"\n\nimport Tone from 'tone'\n\nclass Slider extends React.Component {\n   constructor() {\n       super()\n       this.handleChange = this.handleChange.bind(this)\n   }\n   componentDidMount() {\n    this.beats.addEventListener(\"change\", this.handleChange);\n   }\n\n\n    handleChange(event) {\n        Tone.Transport.bpm.value = event.detail\n    }\n    \n\n    render() {\n        return (\n            <div className = \"slider\">\n                <tone-slider ref={elem => this.beats = elem} label=\"bpm\" min=\"60\" max=\"300\" exp=\"2\" value=\"120\"/>\n            </div>\n        )\n    }\n}\n\nexport default Slider","import React from 'react'\n\n\nclass PlayPause extends React.Component {\n       constructor(props) {\n           super()\n           this.state = {clicked: false}\n           this.handleClick = this.handleClick.bind(this)\n       }\n\n    isOn = true;\n    handleClick() {\n        if(this.isOn) {\n            this.setState({clicked: true});\n            this.isOn = false;\n        } else {\n            this.setState({clicked: false});\n            this.isOn = true;\n        }\n        this.props.playAndPause();\n        \n    }      \n      \n    render() {\n        var className = this.state.clicked ? \"fa fa-pause fa-lg\" : \"fa fa-play fa-lg\";\n        return (\n            <div className=\"playpause\">\n                <button className=\"playbtn\" onClick={this.handleClick} > <i className= {className}  > </i></button>\n            </div>\n        )\n    }\n}\n\n\n\nexport default PlayPause","import React from 'react';\n\nimport './App.css';\n\nimport Sets from \"./Components/Sets\"\nimport Drums from \"./Components/Drums\"\nimport Slider from \"./Components/Slider\"\nimport PlayPause from './Components/PlayPause';\nimport Tone from 'tone'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n                    name: 'Make a beat!', \n                    color: \"\"\n                  }\n      this.repeat = this.repeat.bind(this)\n      this.playAudio = this.playAudio.bind(this)\n      this.pauseAudio = this.pauseAudio.bind(this)\n      this.playAndPause = this.playAndPause.bind(this)\n      this.checkElectro = this.checkElectro.bind(this)\n      this.checkRock = this.checkRock.bind(this)\n      this.checkHipHop = this.checkHipHop.bind(this)\n  }\n\n  componentDidMount() {\n    this.electroInput = document.querySelector(\".electro input[type=checkbox]\")\n    this.rockInput = document.querySelector(\".rock input[type=checkbox]\")\n    this.hipHopInput = document.querySelector(\".hiphop input[type=checkbox]\")\n   \n    window.onload = this.checkElectro();    \n\n    if (this.electroInput.checked) {\n      this.checkElectro();\n    }\n    \n    if (this.rockInput.checked) {\n      this.checkRock();\n    }\n\n    if (this.hipHopInput.checked) {\n      this.checkHipHop();\n    }\n\n    this.index = 2;\n    \n    Tone.Transport.scheduleRepeat(this.repeat, \"8n\");\n  }\n    \n  repeat() {\n    if (this.index > 9) {\n      this.index = 2;     \n    }\n\n    let kickInputs = document.querySelector(\n       `.kick input:nth-child(${this.index})`\n    );\n    let snareInputs = document.querySelector(\n      `.snare input:nth-child(${this.index})`\n    );\n    let hihatInputs = document.querySelector(\n       `.hihat input:nth-child(${this.index})`\n    );\n\n    if(kickInputs.checked) {\n      this.kick.start();\n    }\n    if(snareInputs.checked) {\n      this.snare.start();\n    }\n    if(hihatInputs.checked) {\n      this.hihat.start();\n    }\n\n    this.index++;\n  } \n  \n  checkElectro() {\n    this.kick = new Tone.Player(\"./electrokick.wav\").toMaster()\n    this.snare = new Tone.Player(\"./electrosnare.wav\").toMaster()\n    this.hihat = new Tone.Player(\"./electrohihat.wav\").toMaster()\n    this.rockInput.checked = false;\n    this.hipHopInput.checked = false;\n    this.electroInput.checked = true;\n    this.rockInput.disabled = false;\n    this.hipHopInput.disabled = false;\n  }\n\n  checkRock() {\n    this.kick = new Tone.Player(\"./rockkick.wav\").toMaster()\n    this.snare = new Tone.Player(\"./rocksnare.wav\").toMaster()\n    this.hihat = new Tone.Player(\"./rockhihat.wav\").toMaster()\n    this.electroInput.checked = false;\n    this.hipHopInput.checked = false;\n    this.rockInput.disabled = true;\n    this.hipHopInput.disabled = false;\n  }\n\n  checkHipHop() {\n    this.kick = new Tone.Player(\"./hiphopkick.wav\").toMaster()\n    this.snare = new Tone.Player(\"./hiphopsnare.wav\").toMaster()\n    this.hihat = new Tone.Player(\"./hiphophihat.wav\").toMaster()\n    this.electroInput.checked = false;\n    this.rockInput.checked = false;\n    this.rockInput.disabled = false;\n    this.hipHopInput.disabled = true;\n  }\n\n  first_click = true;\n \n  playAndPause() {\n    if (this.first_click) {\n      this.playAudio();\n      this.first_click = false;\n    } else {\n      this.pauseAudio();\n      this.first_click = true;\n    }\n  }\n\n  playAudio() {\n    this.setState({name: 'Playing'})\n    this.setState({color: \"red\"})\n    Tone.Transport.start();\n    this.rockInput.disabled = true;\n    this.hipHopInput.disabled = true;\n    this.electroInput.disabled = true;\n  }\n    \n  pauseAudio() {\n    this.setState({name: 'Paused'})\n    this.setState({color: ''})\n    Tone.Transport.pause();\n    this.rockInput.disabled = false;\n    this.hipHopInput.disabled = false;\n    this.electroInput.disabled = false;\n\n    if (this.rockInput.checked) {\n      this.rockInput.disabled = true;\n    }\n\n    if (this.hipHopInput.checked) {\n      this.hipHopInput.disabled = true;\n    }\n  }\n\n  render() {\n    return (\n      <div className = \"container\">\n       <h1 style={{color: this.state.color}}>Drum Machine</h1><br></br><br></br>\n        <Sets \n          checkElectro={this.checkElectro}\n          checkHipHop={this.checkHipHop}\n          checkRock={this.checkRock}/>\n         <Drums/>\n          <h4 style={{color: this.state.color}}>{this.state.name}</h4><br></br>\n          <PlayPause playAndPause={this.playAndPause}/>\n          <Slider />\n      </div>\n    )   \n  }\n}\n\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}