{"version":3,"sources":["Components/Kick.js","Components/Snare.js","Components/HiHat.js","Components/Drums.js","Components/Slider.js","Components/PlayPause.js","App.js","serviceWorker.js","index.js"],"names":["Kick","react_default","a","createElement","className","type","React","Component","Snare","HiHat","Drums","Components_Kick","Components_Snare","Components_HiHat","Slider","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","beats","addEventListener","event","Tone","Transport","bpm","value","detail","_this2","ref","elem","label","min","max","exp","PlayPause","props","isOn","state","clicked","handleClick","setState","playAndPause","onClick","App","first_click","name","color","repeat","playAudio","pauseAudio","checkElectro","checkRock","checkHipHop","electroInput","document","querySelector","rockInput","hipHopInput","window","onload","checked","index","scheduleRepeat","kickInputs","concat","snareInputs","hihatInputs","kick","start","snare","hihat","Player","toMaster","disabled","pause","style","Components_Drums","Components_PlayPause","Components_Slider","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf674c7b.chunk.js","sourcesContent":["import React from 'react'\n\nclass Kick extends React.Component {\n    render() {\n        return (\n            <div className=\"kick\">\n            <h4>Kick</h4>\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n            </div>\n        )\n    }\n}\n    \n    export default Kick\n    ","import React from 'react'\n\nclass Snare extends React.Component {\n\n    render() {\n        return (\n            <div className=\"snare\">\n            <h4>Snare</h4>\n                \n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                \n            </div> \n        )\n    }\n}\n\nexport default Snare","import React from \"react\"\n\nclass HiHat extends React.Component {\n    render() {\n        return (\n            <div className=\"hihat\">\n            <h4>HiHat</h4>\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n                <input type=\"checkbox\" />\n            </div>\n        )\n    }\n}\n\nexport default HiHat","import React from \"react\"\n\nimport Kick from \"./Kick\"\nimport Snare from \"./Snare\"\nimport HiHat from \"./HiHat\"\n\nclass Drums extends React.Component {\n    render() {\n        return (\n            <div className = \"drums\">\n                <Kick />\n                <Snare />\n                <HiHat />\n            </div>\n        )\n    }    \n}\n\nexport default Drums","import React from \"react\"\n\nimport Tone from 'tone'\n\nclass Slider extends React.Component {\n   constructor() {\n       super()\n       this.handleChange = this.handleChange.bind(this)\n   }\n   componentDidMount() {\n    this.beats.addEventListener(\"change\", this.handleChange);\n   }\n\n\n    handleChange(event) {\n        Tone.Transport.bpm.value = event.detail\n    }\n    \n\n    render() {\n        return (\n            <div className = \"slider\">\n                <tone-slider ref={elem => this.beats = elem} label=\"bpm\" min=\"60\" max=\"300\" exp=\"2\" value=\"120\"/>\n            </div>\n        )\n    }\n}\n\nexport default Slider","import React from 'react'\n\n\nclass PlayPause extends React.Component {\n       constructor(props) {\n           super()\n           this.state = {clicked: false}\n           this.handleClick = this.handleClick.bind(this)\n       }\n\n    isOn = true;\n    handleClick() {\n        if(this.isOn) {\n            this.setState({clicked: true});\n            this.isOn = false;\n        } else {\n            this.setState({clicked: false});\n            this.isOn = true;\n        }\n        this.props.playAndPause();\n        \n    }      \n      \n    render() {\n        var className = this.state.clicked ? \"fa fa-pause fa-lg\" : \"fa fa-play fa-lg\";\n        return (\n            <div className=\"playpause\">\n                <button className=\"playbtn\" onClick={this.handleClick} > <i className= {className}  > </i></button>\n            </div>\n        )\n    }\n}\n\n\n\nexport default PlayPause","import React from 'react';\n\nimport './App.css';\n\nimport Drums from \"./Components/Drums\"\n\nimport Slider from \"./Components/Slider\"\nimport PlayPause from './Components/PlayPause';\nimport Tone from 'tone'\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n                    name: 'Make a beat!', \n                    color: \"\",\n                    }\n      this.repeat = this.repeat.bind(this)\n      this.playAudio = this.playAudio.bind(this)\n      this.pauseAudio = this.pauseAudio.bind(this)\n      this.playAndPause = this.playAndPause.bind(this)\n      this.checkElectro = this.checkElectro.bind(this)\n      this.checkRock = this.checkRock.bind(this)\n      this.checkHipHop = this.checkHipHop.bind(this)\n  }\n\n  \n    \n  componentDidMount() {\n    let electroInput = document.querySelector(\".electro input[type=checkbox]\")\n    let rockInput = document.querySelector(\".rock input[type=checkbox]\")\n    let hipHopInput = document.querySelector(\".hiphop input[type=checkbox]\")\n     //Where do I put above so that I don't have to do it every time?\n    window.onload = this.checkElectro();    \n\n    if (electroInput.checked) {\n      this.checkElectro();\n    }\n    \n    if (rockInput.checked) {\n      this.checkRock();\n    }\n\n    if (hipHopInput.checked) {\n      this.checkHipHop();\n    }\n\n    this.index = 2;\n    \n    Tone.Transport.scheduleRepeat(this.repeat, \"8n\");\n  }\n    \n\n \n repeat() {\n  if (this.index > 9) {\n    this.index = 2;     \n }\n\n let kickInputs = document.querySelector(\n     `.kick input:nth-child(${this.index})`\n );\n let snareInputs = document.querySelector(\n   `.snare input:nth-child(${this.index})`\n );\n let hihatInputs = document.querySelector(\n     `.hihat input:nth-child(${this.index})`\n );\n\n if(kickInputs.checked) {\n    this.kick.start();\n  }\n if(snareInputs.checked) {\n    this.snare.start();\n  }\n if(hihatInputs.checked) {\n    this.hihat.start();\n  }\n\nthis.index++;\n}\n  \ncheckElectro() {\n  let electroInput = document.querySelector(\".electro input[type=checkbox]\")\n  let rockInput = document.querySelector(\".rock input[type=checkbox]\")\n  let hipHopInput = document.querySelector(\".hiphop input[type=checkbox]\")\n  //Where do I put above so that I don't have to do it every time?\n  this.kick = new Tone.Player(\"./electrokick.wav\").toMaster()\n  this.snare = new Tone.Player(\"./electrosnare.wav\").toMaster()\n  this.hihat = new Tone.Player(\"./electrohihat.wav\").toMaster()\n  rockInput.checked = false;\n  hipHopInput.checked = false;\n  electroInput.checked = true;\n  rockInput.disabled = false;\n  hipHopInput.disabled = false;\n}\n\n\n  \ncheckRock() {\n    let rockInput = document.querySelector(\".rock input[type=checkbox]\")\n    let electroInput = document.querySelector(\".electro input[type=checkbox]\")\n    let hipHopInput = document.querySelector(\".hiphop input[type=checkbox]\")\n    //Where do I put above so that I don't have to do it every time?\n    this.kick = new Tone.Player(\"./rockkick.wav\").toMaster()\n    this.snare = new Tone.Player(\"./rocksnare.wav\").toMaster()\n    this.hihat = new Tone.Player(\"./rockhihat.wav\").toMaster()\n    electroInput.checked = false;\n    hipHopInput.checked = false;\n    rockInput.disabled = true;\n    hipHopInput.disabled = false;\n    \n}\n\n  checkHipHop() {\n    let hipHopInput = document.querySelector(\".hiphop input[type=checkbox]\")\n    let electroInput = document.querySelector(\".electro input[type=checkbox]\")\n    let rockInput = document.querySelector(\".rock input[type=checkbox]\")\n    //Where do I put above so that I don't have to do it every time?\n    this.kick = new Tone.Player(\"./hiphopkick.wav\").toMaster()\n    this.snare = new Tone.Player(\"./hiphopsnare.wav\").toMaster()\n    this.hihat = new Tone.Player(\"./hiphophihat.wav\").toMaster()\n    electroInput.checked = false;\n    rockInput.checked = false;\n    rockInput.disabled = false;\n    hipHopInput.disabled = true;\n  }\n\n  first_click = true;\n \n  playAndPause() {\n    if (this.first_click) {\n      this.playAudio();\n      this.first_click = false;\n    } else {\n      this.pauseAudio();\n      this.first_click = true;\n    }\n  }\n\n    \n\n  playAudio() {\n    let hipHopInput = document.querySelector(\".hiphop input[type=checkbox]\")\n    let electroInput = document.querySelector(\".electro input[type=checkbox]\")\n    let rockInput = document.querySelector(\".rock input[type=checkbox]\")\n        //Where do I put above so that I don't have to do it every time?\n    this.setState({name: 'Playing'})\n    this.setState({color: \"red\"})\n    Tone.Transport.start();\n\n    //Below prevents user from switching drum kits while loop is playing, thus preventing the buffer error that occurs some of the time.\n    rockInput.disabled = true;\n    hipHopInput.disabled = true;\n    electroInput.disabled = true;\n  }\n    \n  pauseAudio() {\n    let hipHopInput = document.querySelector(\".hiphop input[type=checkbox]\")\n    let electroInput = document.querySelector(\".electro input[type=checkbox]\")\n    let rockInput = document.querySelector(\".rock input[type=checkbox]\")\n     //Where do I put above so that I don't have to do it every time?\n    this.setState({name: 'Paused'})\n    this.setState({color: ''})\n    Tone.Transport.pause();\n\n    //Below reenables the ability to switch between drum kits.\n    rockInput.disabled = false;\n    hipHopInput.disabled = false;\n    electroInput.disabled = false;\n  }\n\n  render() {\n    return (\n      <div className = \"container\">\n       <h1 style={{color: this.state.color}}>Drum Machine</h1><br></br><br></br>\n       <div className = \"sets\">\n        <div className = \"electro\"><h5>Electro</h5><input type=\"checkbox\" onClick={this.checkElectro} className = \"check1\"/></div>\n        <div className = \"rock\"><h5>Rock</h5><input type=\"checkbox\" onClick={this.checkRock} className = \"check2\"/></div>\n        <div className = \"hiphop\"><h5>HipHop</h5><input type=\"checkbox\" onClick={this.checkHipHop} className = \"check3\"/></div> \n       </div>\n         <Drums/>\n          <h4 style={{color: this.state.color}}>{this.state.name}</h4><br></br>\n          <PlayPause \n            playAndPause={this.playAndPause}/>\n          <Slider />\n      </div>\n    )   \n  }\n}\n\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}